to było w ## tab3 callbacks


"""
    grouped = df.merged[(df.merged['total_amt']>0)&(df.merged['Store_type']==chosen_cat)].pivot_table(index='Store_type',columns='Gender',values='total_amt',aggfunc='sum').assign(_sum=lambda x: x['F']+x['M']).sort_values(by='_sum').round(2)

    traces = []
    for col in ['F','M']:
        traces.append(go.Bar(x=grouped[col],y=grouped.index,orientation='h',name=col))

    data = traces
    fig = go.Figure(data=data,layout=go.Layout(barmode='stack',margin={'t':20,}))
    return fig
"""

w tab3.py:

def render_tab(df):

    grouped = df[df['total_amt']>0].groupby('Store_type')['total_amt'].sum()
    fig = go.Figure(data=[go.Pie(labels=grouped.index,values=grouped.values)],layout=go.Layout(title='Udział klientów ze względy na płeć w poszczególnych kanałach sprzedaży'))

    layout = html.Div([html.H1('Kanały sprzedaży',style={'text-align':'center'}),

                        html.Div([html.Div([dcc.Graph(id='pie-store-type',figure=fig)],style={'width':'50%'}), # id do zmiany ? / zmienione ale czy trzeba?
                        html.Div([dcc.Dropdown(id='store_type_dropdown', 
                                    options=[{'label':Store_type,'value':Store_type} for Store_type in df['Store_type'].unique()],
                                    value=df['Store_type'].unique()[0]),
                                    dcc.Graph(id='bar-store-type')],style={'width':'50%'})],style={'display':'flex'}), 
                                    html.Div(id='temp-out') # id do zmiany ?
                        ])

    return layout