"""
html.Div([dcc.Dropdown(id='store_type_dropdown', 
                                    options=[{'label':Store_type,'value':Store_type} for Store_type in df['Store_type'].unique()],
                                    value=df['Store_type'].unique()[0]),
                                    dcc.Graph(id='bar-store-type', figure=fig)],style={'width':'50%'})],style={'display':'flex'}),
"""


"""
@app.callback(Output('bar-store-type','figure'),
            [Input('store_type_dropdown','value')])
def tab3_bar_store_type(chosen_cat):

    grouped = df.merged[(df.merged['total_amt']>0)&(df.merged['Story_type']==chosen_cat)].groupby([pd.Grouper(key='df.merged.tran_date.dt.dayname()',freq='M'),'Store_type'])['total_amt'].sum().round(2).unstack()

    traces = []
    for col in grouped.columns:
        traces.append(go.Bar(x=grouped.index,y=grouped[col],name=col,hoverinfo='text',
        hovertext=[f'{y/1e3:.2f}k' for y in grouped[col].values]))

    data = traces
    fig = go.Figure(data=data,layout=go.Layout(title='Przychody w poszczeg√≥lne dni tygodnia',barmode='stack',legend=dict(x=0,y=-0.5)))

    return fig    
"""